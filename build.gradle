buildscript {
    repositories {
        mavenCentral()
        maven { url = "https://jitpack.io" }
        maven { url = "https://maven.minecraftforge.net" }
    }
    dependencies {
        classpath('com.github.DStrand1:ForgeGradle:FG_2.3-SNAPSHOT') {
            changing = true
        }
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

//Sound credit
//Sound Effect from <a href="https://pixabay.com/sound-effects/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=music&amp;utm_content=104894">Pixabay</a>
version = "1.4.3-1.12.2"
group = "tiki.advancedlootableweapons" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "advancedlootableweapons"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.5.2847"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
  //maven {
  //  // location of the maven that hosts JEI files
  //  name = "Progwml6 maven"
  //  url = "https://dvs1.progwml6.com/files/maven/"
  //}
  maven {
    // ModMaven for JEI
    url = "https://modmaven.dev"
  }
  
  maven {
    // CraftTweaker
    url "http://maven.blamejared.com/"
  }
  
  maven {
    url "https://cursemaven.com"
  }
  
  //flatDir {
  	//dirs 'libs'
  //}
}

dependencies {
    // compile against the JEI API but do not include it at runtime
    deobfProvided "mezz.jei:jei_${mc_version}:${jei_version}:api"
    // at runtime, use the full JEI jar
    runtime "mezz.jei:jei_${mc_version}:${jei_version}"
    //deobfCompile "mezz.jei:jei_${mc_version}:${jei_version}"
    
  	compile "CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-4.1.9.6" // Api included in main
  	compile "CraftTweaker2:ZenScript:4.1.9.6"
  	
  	compile "com.teamacronymcoders.base:base:1.12.2-3.14.0"
  	compile "com.teamacronymcoders:ContentTweaker:1.12.2-4.9.1"
  	
  	// This is for flatDir 'libs'
  	//compile files('BetterWithMods-1.12-2.3.24.jar')
  	//compile files('athenaeum-1.12.2-1.19.6.jar')
  	//compile files('dropt-1.12.2-2.3.24.jar')
  	//compile files('pyrotech-1.12.2-1.6.9.jar')
  	
  	//CurseMaven
  	compile "curse.maven:bwm-suite-246760:3289033"
  	compile "curse.maven:pyrotech-306676:4798313"
  	compile "curse.maven:athenaeum-284350:4633750"
  	compile "curse.maven:dropt-284973:3758733"
	
	// I think this also includes any jars in libs?
	compile fileTree(dir: './libs', include: '*.jar')
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
