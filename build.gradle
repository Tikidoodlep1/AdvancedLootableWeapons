buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.parchmentmc', name: 'librarian', version: '1.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'

version = "$minecraft_version-$mod_version"
group = 'com.tiki.advancedlootableweapons' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'advancedlootableweapons'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
compileJava {
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
}

sourceSets {
    main {
        resources {
            srcDirs += 'src/generated/resources'
            exclude '.cache'
        }
    }
    datagen {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
}

minecraft {
    mappings channel: "${mappings_channel}", version: "${mappings_version}-${minecraft_version}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run/client')
            jvmArg '-Dterminal.ansi=true'

            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'

            args '--username', 'Dev'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"

        }

        server {
            workingDirectory project.file('run/server')
            jvmArg '-Dterminal.ansi=true'

            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"

        }

        data {
            workingDirectory project.file('run/client')
            jvmArg '-Dterminal.ansi=true'

            property 'forge.logging.console.level', 'debug'
            args '--mod', 'advancedlootableweapons', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            ideaModule project.name + ".datagen"

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"

            mods {
                advancedlootableweapons {
                    source sourceSets.main
                    source sourceSets.datagen
                }
            }
        }
    }
}

repositories {
    maven { url "https://maven.shedaniel.me/" }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    implementation fg.deobf("me.shedaniel:RoughlyEnoughItems-forge:$rei_version")

    implementation fg.deobf("me.shedaniel.cloth:cloth-config-forge:$cloth_config_version")
    implementation fg.deobf("dev.architectury:architectury-forge:$architectury_version")
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "advancedlootableweapons",
                "Specification-Vendor"    : "tiki, destroyer, and flamingsharky",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "tiki, destroyer, and flamingsharky",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}